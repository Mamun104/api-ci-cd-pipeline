name: Automated API Tests with Allure Reporting

on:
  push:
    branches:
      - main

jobs:
  automated-api-tests:
    runs-on: windows-latest
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Install Postman CLI
      - name: Install Postman CLI
        run: |
          powershell.exe -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "[System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://dl-cli.pstmn.io/install/win64.ps1'))"

      # Login to Postman CLI using an API key
      - name: Login to Postman CLI
        run: postman login --with-api-key PMAK-679b6f001b20d100012ac69c-fd41a641750ce3d43725557729738df770

      # Run the API Collection with Postman CLI
      - name: Run API tests with Postman CLI
        run: |
          postman collection run 16548351-891be621-9d54-4163-9b40-82023133d870

      # Install Newman, Allure Reporter, and Allure Commandline
      - name: Install Newman and Allure Reporter
        run: |
          npm install -g newman
          npm install -g newman-reporter-allure
          npm install -g allure-commandline --save-dev

      # Run API tests and Generate Newman Allure Report
      - name: Run Newman and Generate Allure Report
        shell: bash
        run: |
          newman run https://api.getpostman.com/collections/16548351-891be621-9d54-4163-9b40-82023133d870?apikey=PMAK-679b6f001b20d100012ac69c-fd41a641750ce3d43725557729738df770 \
          -r allure --reporter-allure-export allure-results

      # Generate Allure Report
      - name: Generate Allure Report
        run: |
          allure generate allure-results --clean -o allure-report

      # Deploy Allure Report to GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.TOKEN }}
          publish_dir: allure-report
          publish_branch: gh-pages
          force_orphan: true
