name: Automated API Tests for Specific Requests

on:
  push:
    branches:
      - main

jobs:
  automated-api-tests:
    runs-on: windows-latest
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Install Postman CLI
      - name: Install Postman CLI
        run: |
          powershell.exe -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "[System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://dl-cli.pstmn.io/install/win64.ps1'))"
      # Login to Postman CLI using an API key
      - name: Login to Postman CLI
        run: postman login --with-api-key PMAK-679b6f001b20d100012ac69c-fd41a641750ce3d43725557729738df770

      # Run the API Collection with Postman CLI
      - name: Run API tests with Postman CLI
        run: |
          postman collection run 16548351-891be621-9d54-4163-9b40-82023133d870
      # Install Newman and htmlextra Reporter
      - name: Install Newman and htmlextra Reporter
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra
      # Run API tests and Generate Newman htmlextra Report
      - name: Run Newman and Generate Report
        shell: bash  # Force the use of bash to interpret the Newman command correctly
        run: |
          newman run https://api.getpostman.com/collections/16548351-891be621-9d54-4163-9b40-82023133d870?apikey=PMAK-679b6f001b20d100012ac69c-fd41a641750ce3d43725557729738df770 \
          -r htmlextra --reporter-htmlextra-export newman-report.html
      # Upload the Newman report as an artifact
      - name: Upload Newman Report
        uses: actions/upload-artifact@v4
        with:
          name: newman-htmlextra-report
          path: newman-report.html