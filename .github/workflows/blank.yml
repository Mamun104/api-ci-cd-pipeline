name: Automated API Tests with Allure Reporting

on:
  push:
    branches:
      - main

jobs:
  automated-api-tests:
    runs-on: windows-latest
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Install Postman CLI
      - name: Install Postman CLI
        run: |
          powershell.exe -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "[System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://dl-cli.pstmn.io/install/win64.ps1'))"

      # Login to Postman CLI using an API key
      - name: Login to Postman CLI
        run: postman login --with-api-key PMAK-67ab1b9acffbe80001bd3d24-6e47fc2a5b0725d0c4c8999ed752c2770b

      # Run the API Collection with Postman CLI
      - name: Run API tests with Postman CLI
        run: |
          postman collection run 42111809-cb8e0811-4fa5-489b-8f03-8a33fe75a5ba

      # Install Newman, Allure Reporter, and Allure Commandline
      - name: Install Newman and Allure Reporter
        run: |
          npm install -g newman
          npm install -g newman-reporter-allure
          npm install -g allure-commandline --save-dev

      # Run API tests and Generate Newman Allure Report
      - name: Run Newman and Generate Allure Report
        shell: bash
        run: |
          newman run https://api.getpostman.com/collections/42111809-cb8e0811-4fa5-489b-8f03-8a33fe75a5ba?apikey=PMAK-67ab1b9acffbe80001bd3d24-6e47fc2a5b0725d0c4c8999ed752c2770b \
          -r allure --reporter-allure-export allure-results

      # Generate Allure Report
      - name: Generate Allure Report
        shell: bash
        run: |
          allure generate allure-results --clean -o allure-report

      # Move Allure Report to Unique Folder
      - name: Move Allure Report to Unique Folder
        shell: bash
        run: |
          timestamp=$(date +%Y%m%d%H%M%S)
          mkdir -p public/reports/$timestamp
          mv allure-report/* public/reports/$timestamp/
          echo "REPORT_LINK=https://mamun104.github.io/api-ci-cd-pipeline/reports/$timestamp/index.html" >> $GITHUB_ENV

      # Display directory structure for debugging
      - name: List directory structure for verification
        shell: bash
        run: |
          ls -R public

      # Deploy Allure Report to GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.TOKEN }}
          publish_dir: public
          publish_branch: gh-pages
          keep_files: true  # Keeps previous reports intact

      # Send email with GitHub Pages link including the unique
      - name: Send email with Allure Report Link
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          secure: false
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          from: ${{ secrets.USERNAME }}
          to: mamunur.rashid@byslglobal.com,minhazur.rahman@byslglobal.com,moinul.islam@byslglobal.com
          subject: "Submission of Automated API Testing Report for Your Review"
          body: |

              Dear Sir,

              I hope this message finds you well.

              I am pleased to share that the API testing has been successfully completed, and the report has been generated using Allure Newman Reporter.
              You may review the detailed findings at your convenience via the link below:

              ${{ env.REPORT_LINK }}

              Kindly let me know if you have any feedback or require further clarification on any specific areas.

              Thank you for your time and consideration.